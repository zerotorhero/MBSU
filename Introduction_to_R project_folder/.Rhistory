iris_data
getwd()
iris_data<-read.csv("./Data/iris_good.csv")
# You can use the "#" symbol to tell R to ingnore the text that follows
#### you can use as many "#" as you wish
# you can also place "#" comments after R inputs, for example:
x<-0 # blablabla... my R interesting R input
##############################################################################
# Date: Tuesday, Oct. 11, 2011
# By: Insert your name (e.g. Zofia E. Taranu)
# Description: BGSA Introductory Worshop - Day 2
# Version of R used: RStudio 0.94.92
# ...
# 1.HOUSEKEEPING
# Housekeeping are functions that will ensure that your script runs smoothly.
# Clear R memory
rm(list=ls())
# Removes all variables from memory
# Prevents errors such as use of older data
# 2. SET WORKING DIRECTORY
# A directory is a folder and the instructions (path) to get to that folder
# The working directory is the folder from which R will read files
# and to which R will save files
#setwd("~/Desktop/PhD/FALL 2011/Stats workshop - Day 2/Data_Intro Day 2")
#This is not necessary when using RStudio projects
# 3. DATA IMPORT
# First we will import "clean" data in a csv file
iris_data<-read.csv("./Data/iris_good.csv")
# "iris_good.csv" is the complete file name, where ".csv" is the file's extension
# Look at...
# a. the entire data matrix (think of this as your excel spreadsheet in a way)
iris_data
iris_data$Sepal.Length
?lm
data()
?read.csv
iris_data
iris.data
iris
iris_data<-iris
iris.data$mean.sepal.length[iris_data$Species==setosa]<-with(iris.data,
mean(Sepal.Length))
iris_data$mean.sepal.length[iris_data$Species==setosa]<-with(iris_data,
mean(Sepal.Length))
iris_data$mean.sepal.length[iris_data$Species=="setosa"]<-with(iris_data,
mean(Sepal.Length))
iris_data$mean.sepal.length
package.list<-rownames(installed.packages())
save(package.list, file="~/Documents/Useful-R-functions/R packages/package_list.RData")
write.csv(package.list, file="~/Documents/Useful-R-functions/R packages/package_list.csv")
?dump
dump(package.list)
warnings()
dump("package.list")
dump("package.list", "")
?lapply
?sapply
package.list <-
c("abind", "acepack", "ada", "ade4", "ADGofTest", "AER", "agricolae",
"akima", "AlgDesign", "animation", "ape", "aplpack", "AquaEnv",
"aroma.affymetrix", "aroma.apd", "aroma.core", "asbio", "ash",
"base", "base64", "base64enc", "bbmle", "BCE", "bdsmatrix", "biglm",
"BiocGenerics", "BiocInstaller", "Biostrings", "bit", "bitops",
"boot", "bootstrap", "BsMD", "Cairo", "cairoDevice", "candisc",
"car", "caret", "caTools", "chron", "CITAN", "class", "clue",
"cluster", "clusterGeneration", "clusterSim", "coda", "codetools",
"coin", "colorspace", "compiler", "conf.design", "corpcor", "crantastic",
"cubature", "DAAG", "data.table", "datasets", "date", "DBI",
"degreenet", "DEoptim", "deSolve", "devtools", "dichromat", "digest",
"directlabels", "DoE.base", "doMC", "dplyr", "dummies", "dynlm",
"e1071", "Ecdat", "effects", "ellipse", "emdbook", "ergm", "evaluate",
"extrafont", "extrafontdb", "fBasics", "fdrtool", "fEcofin",
"ff", "ffbase", "fields", "flexmix", "flux", "foreach", "foreign",
"formatR", "Formula", "FrF2", "fts", "gam", "gclus", "gdata",
"gee", "GeneNet", "geoPlot", "GGally", "ggplot2", "ggsubplot",
"gmp", "gnumeric", "googleVis", "gplots", "graphics", "grDevices",
"grid", "gridExtra", "grouped", "gsubfn", "gtable", "gtools",
"gWidgets", "gWidgetsRGtk2", "hash", "hbim", "hdrcde", "heplots",
"hexbin", "hglm", "highlight", "Hmisc", "HSAUR", "httr", "igraph",
"igraph0", "imguR", "ineq", "ipred", "IRanges", "iterators",
"itertools", "its", "JavaGD", "kernlab", "KernSmooth", "klaR",
"knitr", "ks", "labeling", "lasso2", "latentnet", "lattice",
"latticeExtra", "lda", "leaps", "limSolve", "lme4", "lmtest",
"locfit", "logspline", "longitudinal", "lpSolve", "lubridate",
"mapproj", "maps", "maptools", "markdown", "MASS", "Matrix",
"matrixcalc", "matrixStats", "maxLik", "mboost", "mclust", "MCMCpack",
"memoise", "MEMSS", "methods", "mgcv", "mice", "minpack.lm",
"misc3d", "miscTools", "mitools", "mix", "mlbench", "mlmRev",
"mlogit", "modeest", "modeltools", "moments", "msm", "multcomp",
"multicore", "munsell", "mutatr", "mvtnorm", "network", "networkDynamic",
"nlme", "NMOF", "nnet", "np", "numDeriv", "nws", "oce", "odfWeave",
"odfWeave.survey", "OrgMassSpecR", "oz", "parallel", "parser",
"party", "Peaks", "permute", "pixmap", "plm", "plotrix", "plyr",
"pmml", "png", "polyapost", "popbio", "POT", "prodlim", "proto",
"proxy", "PSCBS", "pscl", "pso", "quadprog", "quantreg", "R.cache",
"R.devices", "R.filesets", "R.huge", "R.methodsS3", "R.oo", "R.rsp",
"R.utils", "R2HTML", "RandForestGUI", "randomForest", "rattle",
"rbenchmark", "rcdd", "Rcmdr", "RColorBrewer", "Rcpp", "RCurl",
"relimp", "reporttools", "reshape", "reshape2", "rfPermute",
"rgenoud", "rggobi", "rgl", "Rglpk", "RGoogleDocs", "RgoogleMaps",
"RGraphics", "RGtk2", "rJava", "rjson", "RJSONIO", "rlecuyer",
"rmeta", "Rmpfr", "Rmpi", "robustbase", "ROCR", "RODBC", "rpart",
"RSQLite", "RSQLite.extfuns", "Rttf2pt1", "RUnit", "rworldmap",
"sampleSelection", "sandwich", "scales", "scatterplot3d", "schoolmath",
"sciplot", "sem", "sendmailR", "sensitivity", "seqinr", "sfsmisc",
"shapes", "simecol", "simPopulation", "sisus", "slam", "slidify",
"slidifyLibraries", "sm", "sna", "snow", "snowFT", "sp", "spam",
"sparkTable", "SparseM", "spatial", "spatialkernel", "splines",
"sqldf", "stabledist", "StatMatch", "statmod", "statnet", "stats",
"stats4", "stringr", "strucchange", "subselect", "survey", "survival",
"svmpath", "systemfit", "tabplot", "tcltk", "tcltk2", "TeachingDemos",
"testthat", "timeDate", "timeSeries", "tis", "tkrplot", "tm",
"tools", "topicmodels", "TRAMPR", "tree", "tripack", "truncreg",
"trust", "TSA", "tseries", "tweedie", "urca", "utils", "varSelRF",
"vcd", "vegan", "vegetarian", "VGAM", "VIM", "waveslim", "whisker",
"wordcloud", "XML", "xtable", "xts", "yaml", "Zelig", "zoo",
"manipulate", "rstudio")
sapply(package.list, install.packages)
demo()
library(ggplot2)
demo()
?demo
demo(package = .packages(all.available = TRUE))
demo()
demo(smooth)
demo(package = .packages(all.available = TRUE))
demo(googleVis)
library(googleVis)
demo(googleVis)
demo(AnimatedGeoMap)
help(package=rms)
install.packages(rms)
install.packages("rms")
help(package=rms)
demo(rms)
library(rms)
demo(rms)
install.packages(fields)
install.packages("fields")
help(package=fields)
demo(data.table)
